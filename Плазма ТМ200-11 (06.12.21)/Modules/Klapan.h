//---------------------------------------------------------------------------
//--Описание переменных, структур и прототипов шаблонных функций--//
//---------------------------------------------------------------------------
// структура типа "точка" для выделения дискретных сигналов, диагностик
// например диагностика: (1, 0x02) - первый байт, второй бит
struct SKlPoint
{
    char
        x;
    int
        y;
};
// структура объектов, управляемых дискретными сигналами с дискретной обратной
// связью: клапана, пневматика, механизмы подъёма и т.д.
struct SKlapan
{
    char
        // тип объекта в зависимости от кол-ва управляющих сигналов и сигналов
        // обратной связи, может быть: 11, 12, 21, 22
        // например: 21 - 2 управляющих сигнала, 1 ответный сигнал
        type;
    unsigned int
        // норма
        // 0 - код нормы включения объекта
        // 1 - код нормы отключения объекта
        normaNmb[2],
        // счетчик объекта
        ctObject,
        // массив контрольных времён выполнения активных действий объекта
        // 0 - контрольное время включения объекта
        // 1 - контрольное время отключения объекта
        // 2 - контрольное время задержки объекта после включения
        // 3 - контрольное время задержки объекта после отключения
        tkAction[4];
    SKlPoint
        // массив диагностик объекта
        // 0 - объект не отреагировал на сигнал "включения"
        // 1 - объект не отреагировал на сигнал "отключения"
        // 2 - положение объекта неопределено
        // 3 - положение объекта необнозначно
        diagnObject[4],
        // массив управляющих сигналов объекта
        // 0 - сигнал об открытии
        // 1 - сигнал о закрытии
        zinIn[2],
        // массив обратной дискретной связи объекта
        // 0 - сигнал на открытие
        // 1 - сигнал на закрытие
        zinOut[2];
    // функция инкрементации счетчика
    void Time();
};

#define KLAPAN_COUNT 11
SKlapan
	FvnKam,
	FvnShl,
	KlShl,
	KlTmn,
	KlKam,
	KlD4,
	KlD5,
	ShZatvor,
	DZasl,
	PP,
    *KlObjects[KLAPAN_COUNT];

// функция управления объектом с дискетными входами-выходами
void DoAction(bool action, SKlapan *object);
// функция управления объектом с 1 дискетным выходом и 1 входом
void DoAction11(bool action, SKlapan *object);
// функция управления объектом с 1 дискетным выходом и 2 входами
void DoAction12(bool action, SKlapan *object);
// функция управления объектом с 2 дискетными выходами и 1 входом
void DoAction21(bool action, SKlapan *object);
// функция управления объектом с 2 дискетными выходами и 2 входами
void DoAction22(bool action, SKlapan *object);
// функция управления счетчиками
void TimeKlapan();


extern
    unsigned char
        // норма
        norma,
        // вспомогательный подшаг
        sh_,
        // диагностики
        diagn[];


extern
    unsigned int
        // дискретные входы
        zin[],
        // дискретные выходы
        out[];

extern
    void A_OUT(unsigned int channelNmb, unsigned int value);
    void SetOut (bool value, unsigned char byteNmb, unsigned int mask);

