//---------------------------------------------------------------------------
#ifndef LogicH
#define LogicH
//---------------------------------------------------------------------------
#include "Math.h"
//---------------------------------------------------------------------------
//--ДЕКЛАРИРОВАНИЕ ПЕРЕМЕННЫХ--//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//--Норма и диагностики--//
//---------------------------------------------------------------------------
#define DIAGN_COUNT   29
#define DIAGN_S_COUNT  3
#define ZIN_COUNT      5
#define OUT_COUNT      5
#define AIK_COUNT      3
#define AOUT_COUNT    3
#define SHR_COUNT     40
#define PAR_ROW       21
#define PAR_COUNT     21
#define PAR_TRANS     6
#define NASMOD_COUNT  17

unsigned char
	norma = 0,			  // (ПРД) норма
	qkk = 0,			  // (ПРM) код команды
	diagn[DIAGN_COUNT],   // (ПРД) диагностики общие, обнуление перед main
	diagnOld[DIAGN_COUNT],// диагностики архивные
	diagnS[DIAGN_S_COUNT],// (ПРД) диагностики связей с устройствами по RS
	diagnSOld[DIAGN_S_COUNT];// диагностики связей с устройствами архивные

// счетчик кол-ва успешных сеансов связи с СС-10
//unsigned int
//    SS10ConnectCount = 0;
//---------------------------------------------------------------------------
//--Дискретные входы-выходы--//
//---------------------------------------------------------------------------
unsigned int
    out[OUT_COUNT]={0,0,0,0,0},
    zin[ZIN_COUNT]={0,0,0,0},			// (ПРД) дискретные входы, 0 - свободный
    out_Z[OUT_COUNT]={0}, // запоминание для отображения
	zin_Z[ZIN_COUNT]={0}, // запоминание для отображения
    aik[AIK_COUNT * 8],             // (ПРД) аналоговые входы
    aout[AOUT_COUNT * 4] = {8192},
    aoutKon[AOUT_COUNT * 4] = {8192},

//---------------------------------------------------------------------------
//--Уровни вакуума--//
//---------------------------------------------------------------------------
 	// текущий уровень вакуума (Д1,Д2,Д3,Д4,Д5)
	D_D1 = 0, D_D2 = 0, D_D3 = 0, D_D4 = 0, D_D5 = 0,
    //UVAK_OTK_D1 = 60,       // прокачка камеры по баратрону
    //UVAK_OTK_D2 = 5938,     // прокачка камеры по СС-10 (1*10-3)
    //UVAK_OTK_D3 = 6787,     // прокачка камеры по конвектрону (5*10-2)
    //UATM = 8845,            // атмосфера по ПМТ (925)
    //UVAK_TMN_V = 7889,      // 8Па порог включения ВВ насоса (конвектрон)
    //UVAK_TMN_N = 8137,      // 25Па порог включения ВВ насоса (конвектрон)
    //UVAK_ATM = 9850,        // Уровень атмосферы по азоту при напуске (СС-10)
    //UVAK_KAM = 6020,        // 5Па по (MTM9D)
    //UVAK_BUST = 5875;       // порог включения бустерного насоса 100 Па(ПМТ)
    POROG_DAVL = 6800,      // 100Па порог превышения давления в камере (MTM9D)
    UVAKV_KAM = 6142,       // 8Па по (MTM9D)
    UVAKN_KAM = 6439,       // 25Па по (MTM9D)
    UVAKN_TMN = 5273,       // 25Па по (ПМТ)
    UVAKV_TMN = 4778,       // 8Па по (ПМТ)
   // UVAK_SHL = 4199,        // 5Па по (ПМТ)
    UVAK_SHL_MO = 6574,     // 500Па по (ПМТ)
    UVAK_SHL_MN = 6574,     // 500Па по (ПМТ)
    UVAK_ZTMN = 5477,       // 40Па по (ПМТ)
    UATM_D1 = 8866,         // атмосфера по (ПМТ)
    UATM_D4 = 8572;         // атмосфера по (MTM9D)
//---------------------------------------------------------------------------
//--Настроечные и управляющие массивы--//
//---------------------------------------------------------------------------
unsigned int nasmod[NASMOD_COUNT+1] = {0};

/////////////////////////////////////////////////////////////////////////////////////////////////
// массив рабочих параметров
int par[PAR_ROW][PAR_COUNT]      = {0};

// массив параметпров для управления манипуляторами
long par_t[PAR_TRANS]            = {0};
//	ПЕР в Касс - par_t[1]
//	ПЕР в Кам - par_t[2]
//	ПОВ к Кам - par_t[3]
//	КАСС на шаг(h) - par_t[4]
//	КАСС на шаг переукл.(h1) - par_t[5]
//---------------------------------------------------------------------------
//--Контрольные времена воздействий--//
//---------------------------------------------------------------------------
// времена и счетчики даны в секундах, если нет обратных комментариев
unsigned int

	// текущее время для процессов
	T_VHG			= 5,	// к.время выставления р/р ВЧГ
	T_ZAD_DVS		= 25,  // (тик)(0.5сек.) задержка на вкл.кнопок
	T_PROC			= 0,	 // время технологического процесса
	T_KTMN_RAZGON	= 430, // к.время разгона ТМН
	T_VKL_BPN     	= 3,   // задержка на вкл/откл реле и пускат. в БПН и БПМ
	T_KKAM_V	= 650, // 650 сек. контр. время ВВ откачки камеры
	T_VODA			= 5,   // сек. реакция на пропадание воды
	T_STOP			= 25,  // (тик) время на стоп двигателей УС
	T_DVIJ			= 25,  // (тик) время на переключение направл. двигателей УС
	T_KDVIJ_SU		= 3000,  // (20мс тик.) 60 сек. контрольное время движения УС конденсатора
	T_KSUT			= 30,  // (20мс тик.) 0,6 сек. задержка УС на переключение движения
	T_KKAM			= 900,
	T_KTMN			= 900,
    T_KPRIJ         = 3,
    T_KPRST         = 5,
    T_KPR           = 15,
	T_KSHL			= 230, // к.время фороткачки шлюза
	T_KNAP			= 120, // к.время напуска в шлюз
	T_NAPUSK		= 15,
    T_SBROSHE       = 20,  // задержка на сброс HE
    T_KSHL_MO       = 180,
    T_TMN = 2,

	// контрольные счетчики времени
	CT_VHG = 0,
	CT_VODA_STOL = 0,		// отстутствия воды в столе
    CT_VODA_IP = 0,      	        // отстутствия воды в ип
    CT_PER = 0,
    CT_POV = 0,
    CT_PRIJ = 0,
    CT_KAS = 0,
    CT_TEMP1 = 0,			// счетчик Нагрева 1
	CT_TEMP2 = 0,			// счетчик Нагрева 2
    CT_TMN = 0,
	CT_IST = 0,

	CT_DVIJ_GIR_g = 0,		// счетчик двигателя УС реактора(грубо)
	CT_DVIJ_GIR_t = 0,		// счетчик двигателя УС реактора(точно)
	CT_SUT_g = 0,			// счетчик на переключение напр.(грубо)
	CT_SUT_t = 0,			// счетчик на переключение напр.(точно)

	// счетчики времен
    CT_T1, 			        // 1мс
    CT_T20,     			// 20 мс

	// контрольные счетчики режимов, сек
	CT_1,
	CT_2,
	CT_3,
	CT_4,
	CT_5,
	CT_6,
	CT_7,
	CT_9,
	CT_17,
	CT17K1,
	CT_27,
	CT27K1,
	CT_28,
	CT28K1,
	CT_29,
	CT29K1,
	CT_30T,
    CT_33,
	CT33K1,
	CT_35,
	CT35K1;
	

//---------------------------------------------------------------------------

//--ОТВЕТЫ--//
unsigned char
	otvet;	  // диалоговый ответ оператора

unsigned int
	KOM_MOD,
        OTVET_MOD;

bool com1_err_alarm = 0,
        com2_err_alarm = 0,
        com3_err_alarm = 0,
        com4_err_alarm = 0;  \
unsigned int
        com3_err = 0;
	
//---------------------------------------------------------------------------
//--Шаги и контрольные параметры подпрограмм--//
//---------------------------------------------------------------------------
unsigned char
	sh_   = 0,         		// общая переменная передачи шага
	// (ПРД) локальная для режима переменная шага
	shr[SHR_COUNT+1],
	// локальная для режима переменная подшага
	sh[SHR_COUNT+1];
unsigned char
        zshr3;
unsigned char
		PR_TRTEST = 0,			// признак окончания транспортного теста
		PR_OTK = 0,
		PR_FK_KAM = 0,
		PR_NASOS = 0,
		PR_NALADKA = 0,
                PR_NPL = 0,
                PR_PRIJ = 0,
		N_PL = 0,
		N_ST_MAX = 20,
		N_ST = 0;
//int     h = 792; //79167;
bool	PR_HEL = 0,				// признак работы РРГ7
        PR_KLASTER=1;
//---------------------------------------------------------------------------
//--Дроссельная заслонка--//
//---------------------------------------------------------------------------
bool
	PR_DZASL = 0;		    		// признак наличия полодительного ответа заслонки
unsigned char
	OTVET_DZASL = 0;
unsigned int
	CT_DZASL = 0,
	DAVL_DZASL = 0,
	DATA_DZASL = 0,		    		// уставка задания заслонка (в ПРД)
	PAR_DZASL  = 0,	            	// параметр заслонки
	ZPAR_DZASL = 0;               	// зап. параметра давления заслонки
	int X_TDZASL;                 	// текущее значение давления
	unsigned char VRDZASL = 0;    	// 1 - признак выхода на режим заслонки
	int E_TDZASL;		    		// текущая ошибка
	int DELDZASL;		    		// модуль текущей ошибки
	unsigned int LIM1DZASL;	    	// предел ошибки регулирования (большой)
	unsigned int LIM2DZASL;	    	// предел ошибки регулирования (малый)
	unsigned int T_VRDZASL=10;   	// контрольное время выхода на режим (сек.)
	unsigned int T_KDZASL = 2;    	// контрольное время определения ошибки(сек.)
	int DOPDZASL = 10;	    		// допустимая погрешность 10%
	unsigned char KOM_DZASL = 0; 	//код команды заслонки
    int TEK_DAVL_DZASL;
    unsigned int TEK_POZ_DZASL;
//---------------------------------------------------------------------------
//--СУ и ИП--//
//---------------------------------------------------------------------------
unsigned char
    prDvijGir_g = 0,              // признак движения ИП реактора: 0 - нет движения, 1 - есть движение
    prDvijGir_t = 0;
unsigned int
	DOP_SU = 5,                 // допуск движения в точку
    T_SM_NAPR = 30,             //(тик)(0.6сек.)Задержка на смену направлений
    DOP_DV_IP = 205;            // допуск движения (перебег) СУ 0,5В

bool
    klGir_gV = 0,             // признак нажатия клавиши "вперёд" реактора(грубо)
    klGir_gN = 0,             // признак нажатия клавиши "назад"  реактора(грубо)
    klGir_tV = 0,             // признак нажатия клавиши "вперёд" реактора(точно)
    klGir_tN = 0;             // признак нажатия клавиши "назад"  реактора(точно)
//----------------------------------------------------------------------------
//-- ВЧГ стола (по мощности) --//
//---------------------------------------------------------------------------
    unsigned char
	    VRGIS = 0,      // 1 - признак выхода на режим ВЧГ стола
	    K_SOGL_GIS= 67,  // заданный коэф-т согласования ВЧГ стола (~15%)
		NAPRS_GIS= 0;   // направление движения согласования ВЧГ стола
						// 0-прямое(>); 1-обратное(<)
	int
		X_TGIS,             // текущее значение падающей мощности
		E_TGIS,		    // текущая ошибка
		DELGIS,		    // модуль текущей ошибки
        DOPGIS = 5,	    // допустимая погрешность
		PAR_GIS = 0;	    // параметр ВЧГ стола
    unsigned int
		N_TEK_GIS,    	    // текущий коэф-т согласования ген.ВЧГ стола
        LIM1GIS,	    // предел ошибки регулирования (большой)
		LIM2GIS,	    // предел ошибки регулирования (малый)
		T_VRGIS=10,         // контрольное время выхода на режим (сек.)
		T_KGIS = 2;         // контрольное время определения ошибки(сек.)
//---------------------------------------------------------------------------
//-- ВЧГ стола (по смещ.) --//
//---------------------------------------------------------------------------
    int
        X_TGIS_SM,			// текущее значение
	    E_TGIS_SM,			// текущая ошибка
	    DELGIS_SM,			// модуль текущей ошибки
        DOPGIS_SM = 5,		// допустимая погрешность
	    PAR_GIS_SM = 0;	    // параметр ВЧГ стола
    unsigned int
	    N_TEK_GIS_SM,		// текущий коэф-т согласования ген.ВЧГ
        LIM1GIS_SM,	        // предел ошибки регулирования (большой)
	    LIM2GIS_SM,	        // предел ошибки регулирования (малый)
	    T_VRGIS_SM=10,		// контрольное время выхода на режим (сек.)
	    T_KGIS_SM = 2;		// контрольное время определения ошибки(сек.)
//----------------------------------------------------------------------------	
//--ВЧГ реактора--//
//---------------------------------------------------------------------------
    unsigned char
	    VRGIR = 0,          // 1 - признак выхода на режим ВЧГ реактора
	    K_SOGL_GIR=67,      // заданный коэф-т согласования ВЧГ реактора (~15%)
	    NAPRS_GIR= 0; 	    // направление движения согласования ВЧГ стола
                            // 0-прямое(>); 1-обратное(<)
    int
        X_TGIR,             // текущее значение падающей мощности
	    E_TGIR,		        // текущая ошибка
	    DELGIR,		        // модуль текущей ошибки
        DOPGIR = 5,		    // допустимая погрешность
	    PAR_GIR = 0;	    // параметр ВЧГ стола
    unsigned int
	    N_TEK_GIR,    	    // текущий коэф-т согласования ген.ВЧГ реактора
        LIM1GIR,	        // предел ошибки регулирования (большой)
	    LIM2GIR,	        // предел ошибки регулирования (малый)
	    T_VRGIR=10,         // контрольное время выхода на режим (сек.)
	    T_KGIR = 2,         // контрольное время определения ошибки(сек.)
	    N_PRED_GIR;	        // запомненный (предыдущий) коэф-т
                            // согласования генератора ВЧГ реактора
//---------------------------------------------------------------------------
//--БПН (Включение нагрева)  индекс устройства TEMP (нагрев по Т)
//-----------------------------------------------------------------------
unsigned char
	KOM_TEMP = 2;		    	// команда опроса статуса ТЕРМОДАТА

bool
    PR_TEMP = 0;		    	// признак положительного ответа ТЕРМОДАТА

unsigned int
	ZAD_TEMP1 = 0,		    	// уставка задания по температуре ТЕРМОДАТА
	PAR_TEMP1  = 0,	    	        // параметр БПН
	ZPAR_TEMP1 = 0;		    	// зап. параметра температуры БПН1
	int X_TEMP1;                     // текущее значение температуры
	unsigned char VRTEMP1 = 0;       // 1 - признак выхода на режим БПН
	int E_TEMP1;		        // текущая ошибка
	int DELTEMP1;		    	// модуль текущей ошибки
	unsigned int LIM1TEMP1;	        // предел ошибки регулирования (большой)
	unsigned int LIM2TEMP1;	        // предел ошибки регулирования (малый)
	int DOPTEMP1 = 5;				// допустимая погрешность 20%
	unsigned int TEK_TEMP1;		// текущая температура по каналу 1 (в ПРД)

unsigned int
	ZAD_TEMP2 = 0,		    	// уставка задания по температуре ТЕРМОДАТА
	PAR_TEMP2  = 0,	    	        // параметр БПН
	ZPAR_TEMP2 = 0;		    	// зап. параметра температуры БПН1
	int X_TEMP2;                     // текущее значение температуры
	unsigned char VRTEMP2 = 0;       // 1 - признак выхода на режим БПН
	int E_TEMP2;		        // текущая ошибка
	int DELTEMP2;		    	// модуль текущей ошибки
	unsigned int LIM1TEMP2;	        // предел ошибки регулирования (большой)
	unsigned int LIM2TEMP2;	        // предел ошибки регулирования (малый)
	int DOPTEMP2 = 5;				// допустимая погрешность 20%	
	unsigned int TEK_TEMP2;		// текущая температура по каналу 2 (в ПРД)
	
	unsigned int T_VRTEMP= 600;       // контрольное время выхода на режим (сек.)
	unsigned int T_KTEMP = 3;       // контрольное время определения ошибки(сек.)

unsigned int
    ZAD_TEMP3 = 0,
    ZAD_TEMP4 = 0,
    TEK_TEMP3,
    TEK_TEMP4;
//---------------------------------------------------------------------------
//--Связь между транспортом и модулем--//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//--Механизм перемещения--//
//---------------------------------------------------------------------------
	unsigned char
	KOM_PER = 0,	// команда
	OTVET_PER = 0,	// ответ
	V_PER = 0,		// скорость	
	TYPE_PER = 0;	// тип движения
	
	bool
	PR_PER = 0,		// признак механизма
	HOME_PER = 0;	// признак движения в Home

	int
	PUT_PER = 0,	// абсолютный путь
	TEK_ABS_PER = 0,
	TEK_OTN_PER = 0;
	
//---------------------------------------------------------------------------
//--Механизм поворота--//
//---------------------------------------------------------------------------
	unsigned char
	KOM_POV = 0,	// команда
	OTVET_POV = 0,	// ответ
	V_POV = 0,		// скорость
	TYPE_POV = 0;	// тип движения
	
	bool
	PR_POV = 0,		// признак механизма
	HOME_POV = 0;	// признак движения в Home

	int
	PUT_POV = 0,	// абсолютный путь
	TEK_ABS_POV = 0,
	TEK_OTN_POV = 0;
//---------------------------------------------------------------------------
//--Механизм кассеты--//
//---------------------------------------------------------------------------
	unsigned char
	KOM_KAS = 0,	// команда
	OTVET_KAS = 0,	// ответ
	V_KAS = 0,		// скорость
	TYPE_KAS = 0;	// тип движения
	
	bool
	PR_KAS = 0,		// признак механизма
	HOME_KAS = 0;	// признак движения в Home

	int
	PUT_KAS = 0,	// абсолютный путь
	TEK_ABS_KAS = 0,
	TEK_OTN_KAS = 0;
//------------------------------------------------------------------------------
//----------------Прототипы---------------------------------------------------
//------------------------------------------------------------------------------
void R_1();                  // режима 1 "Откачка камеры"
void R_2();                  // режима 2 "Откачка шлюза"
void R_3();                  // режима 3 "Рабочий цикл"
void R_4();                  // режима 4 "Технологический процесс"
void R_5();                  // режима 5 "Сброс РЦ"
void R_6();                  // режима 6 "Сбор пластин"
void R_7();                  // режима 7 "Отключение установки"
void R_8();                  // режима 8 "Аварийное отключение установки"
void R_9();                  // режима 9 "Транспортный тест"
void R_10();                 // режима 10 "Открыть ЩЗ"
void R_11();                 // режима 11 "Закрыть ЩЗ"
void R_12();                 // режима 12 "Ман. перем. в исх"
void R_13();                 // режима 13 "Ман. перем. вперед/назад"
void R_14();                 // режима 14 "Ман. пов. в исх"
void R_15();                 // режима 15 "Ман. пов. влево/вправо"
void R_17();                 // режима 18 "Дросселирование ДЗ"
void R_18();                 // режима 18 "Открыть ДЗ"
void R_19();                 // режима 19 "Закрыть ДЗ"
void R_20();                 // режима 20 "РРГ1"
void R_21();                 // режима 21 "РРГ2"
void R_22();                 // режима 22 "РРГ3"
void R_23();                 // режима 23 "РРГ4"
void R_24();                 // режима 24 "РРГ5"
void R_25();                 // режима 25 "РРГ6"
void R_26();                 // режима 26 "РРГ7"
void R_27();                 // режима 27 "Вкл. ВЧГ стола(мощн)"
void SBROSR_27();            // сьрос ВЧГ п/д
void R_28();                 // режима 28 "Вкл. ВЧГ стола(смещ)"
void R_29();                 // режима 29 "Вкл. ВЧГ ИП"
void SBROSR_29();            // сьрос ВЧГ ИП
void R_30();                 // режима 30 "Автосогл. ВЧГ ИП(точно)"
void R_31();                 // режима 31 "Движ. в точку ВЧГ ИП(грубо)"
void R_32();                 // режима 32 "Движ. в точку ВЧГ ИП(точно)"
void R_33();                 // режима 33 "Вкл. нагрев 1"
void R_34();                 // режима 34 "Откл. нагрев 1"
void R_35();                 // режима 35 "Вкл. нагрев 2"
void R_36();                 // режима 36 "Откл. нагрев 2"
void R_37();                 // режима 37 "Прижим вверх"
void R_38();                 // режима 38 "Прижим вниз"
void R_39();                 // режима 39 "Кассета в исх"
void R_40();                 // режима 40 "Кассета вверх/вниз"
//---------------------------------------------------------------------------
//--ФУНКЦИИ КОЛЬЦА--//
//---------------------------------------------------------------------------
void KOLCO();   		// подпрограмма кольцо (диагн., реакция на аварии)

void OSBROS();			// общий сброс
void TIME ();			// таймеры
void POST ();   		// приём и дешифрация команд

void DIAGN_KOLCO();             // диагностика в кольце
void AVAR_VODA_STOL();	        // реакция на пропадание воды в п/держ
void AVAR_VODA_IP();	        // реакция на пропадание воды в ИП
void AVAR_DAVL();	            // "Реакция на высокое давление в камере при работе ТМН"
void UPR_AVAR_OTKL();		    // управление аварийным отключением
void UPR_R_30();	            // управление режимом автосогл.
void VID_DIAGN_GIS();           // выдача диагностики нет согласования ВЧГ п/д
void VID_DIAGN_GIR();           // выдача диагностики нет согласования ВЧГ ИП
void OKNSGIR_g();	            // отработка кнопок грубо ВЧГ ИП
void OKNSGIR_t();	            // отработка кнопок точно ВЧГ ИП
void ZashDD();                  // подпрограмма защиты датчика
void OpenFK_TMN_CloseFK_SHL();	// Подпрограмма: Принудительное открытие ФК-ТМН и закрытие ФК-Шл
void MEH_AVAR_CHK();	        // слежение за авриями механизмов
void MEH_AVAR_SBROS();
void Vkl_FK_TMN();		        // включение ТМН
void UPR();						// подъём/опускание штырей (управл.)
void OPROS_SOST();				// "Опрос и запись состояния"
void PUSK_TP();					//Пуск ТП
//---------------------------------------------------------------------------
//--ФУНКЦИИ УСТРОЙСТВ--//
//---------------------------------------------------------------------------
void VIBPAR_DZASL();		    // подпрограмма "Выбор параметра для заслонки"
void PDDZASL();			    // подготовка аналоговых данных заслонки
void RLIMDZASL();	        	// расчет LIM для заслонки

void VIBPAR_GIS();	        // подпрограмма "Выбор параметра для ВЧГ п/д"
void RLIMGIS();		        // подпрограмма "Расчет LIM для ВЧГ п/д"
void PDGIS();			    // подготовка аналоговых данных ВЧГ п/д

void VIBPAR_GIS_SM();		// подпрограмма "Выбор параметра для ВЧГ п/д"
void RLIMGIS_SM();			// подпрограмма "Расчет LIM для ВЧГ п/д"
void PDGIS_SM();			// подготовка аналоговых данных ВЧГ п/д

void VIBPAR_GIR();	        // подпрограмма "Выбор параметра для ВЧГ ИП"
void RLIMGIR();		        // подпрограмма "Расчет LIM для ВЧГ ИП"
void PDGIR();			    // подготовка аналоговых данных ВЧГ ИП

void RKOEF_GIR();		    // подпрограмма "Расчет текущего коэф-та согласования

void VRR_GIS ();	        // подпрограмма "Выставить разр. работы ВЧГ п/д"
void ORR_GIS ();	        // подпрограмма "Снять разр. работы ВЧГ п/д"
void VRR_GIR ();	        // подпрограмма "Выставить разр. работы ВЧГ ИП"
void ORR_GIR ();	        // подпрограмма "Снять разр. работы ВЧГ ИП"

void VIBPAR_TEMP1();
void RLIMTEMP1();
void PDTEMP1();

void VIBPAR_TEMP2();
void RLIMTEMP2();
void PDTEMP2();

void OPRIJIM();			// механизм прижима в HOME вверх
void VPPRIJIM();	  	// подпрограмма "Прижим вниз"

void VTMN();			// включить ТМН

void OBPN();			// отключить пускатель БПН
bool KasVPaze();			// подпрограмма проверки нахождения кассеты между пазами
//---------------------------------------------------------------------------
//--RS-функции--//
//---------------------------------------------------------------------------
void VIDK_DZASL(int,int,int,int);					// ДЗ
void VIDK_TEMP1(int,int,int,int);
void VIDK_TEMP2(int,int,int,int);

//убрать
void VIDK_PER(unsigned char,unsigned char,int,bool,unsigned int);
void VIDK_POV(unsigned char,unsigned char,int,bool,unsigned int);
void VIDK_KAS(unsigned char,unsigned char,int,bool,unsigned int);
//---------------------------------------------------------------------------
//--Транспортные функции--//
//---------------------------------------------------------------------------
void SBROS_MEH();       	// сброс механики

extern
    void A_OUT(unsigned int Nmb, unsigned int Value);   // задание аналогового выхода
extern
    void SetOut(bool, unsigned char, unsigned int);     // управление дискретным сигналом

#define PER 0
#define POV 1
#define KAS 1
#define ABS 1
#define OTN 2

#endif