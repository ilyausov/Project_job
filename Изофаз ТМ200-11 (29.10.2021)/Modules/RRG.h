//---------------------------------------------------------------------------
//--Описание переменных, структур и прототипов шаблонных функций--//
//---------------------------------------------------------------------------
// структура типа "точка" для выделения дискретных сигналов, диагностик
// например диагностика: (1, 0x02) - первый байт, второй бит
struct SPoint
{
    char
        nBt;		// номер байта
    int
        bMask;		// маска
};
// структура типа "РРГ"
struct SRRG
{
	unsigned char
		nR;				// номер соответствующего режима
	unsigned int
		normaOnNmb,		// код нормы выхода на режим РРГ
		normaOffNmb,	// код нормы отключения РРГ
		ctVR,			// счетчик выхода на режим
		tkVR,			// и его контр. время
		ctVRK,			// контрольный счетчик выхода на режим
		tkVRK;			// и его контр. время
	SPoint
		// массив диагностик объекта
		diagnNVR,		// нет выхода на режим РРГ
		diagnBOR,		// большая ошибка регулирования РРГ		
		diagnNR,		// нет регулирования РРГ
		diagnSUM,		// суммарные диагностики режима 
		// массив управляющих сигналов объекта
		outKl;			// выходной дискретный сигнал клапана
	unsigned int
		aikBt,			// контрольный аналоговый вход
		parRRG,			// параметр РРГ
		aoutBt;			// аналоговый выход задания
	bool
		vRRG;			// признак выхода на режим
	float
		maxFl,			// максимальный расход РРГ
		porog1,			// порог появления диагностики "БОР" 10%
		porog2;			// порог появления диагностики "НР" 50%
};

const
    unsigned int
        qRRG = 7;		// количество РРГ в установке
        SRRG *ObjRRG[qRRG];	// инициализация РРГ

// функции управления объектом
void RRGOn(SRRG *object);
void RRGOff(SRRG *object);
// функция управления счетчиками
void TimeRRG();

extern
	unsigned char
		// диагностики
		diagn[],
                // норма
		norma,
                // режимы
		shr[],
		// шаги режимов
		sh[],
                // вспомогательный подшаг
		sh_;

extern
	unsigned int
		// дискретные входы
		zin[],
		// дискретные выходы
		out[],
		// аналоговые входы
		aik[],
		// аналоговые выходы
		aout[];		

extern
	void A_OUT(unsigned int channelNmb, unsigned int value);
	void SetOut (bool value, unsigned char byteNmb, unsigned int mask);