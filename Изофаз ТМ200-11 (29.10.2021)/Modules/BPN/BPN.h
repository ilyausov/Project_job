//---------------------------------------------------------------------------
//--Описание переменных, структур и прототипов шаблонных функций--//
//---------------------------------------------------------------------------
// структура типа "точка" для выделения дискретных сигналов, диагностик
// например диагностика: (1, 0x02) - первый байт, второй бит
struct BPN_Point
{
    char
        nBt;		// номер байта
    int
        bMask;		// маска
};
// структура типа "БПН"
struct SBPN
{
	unsigned char
		nR1,			// номер соответствующего режима включения
		nR0;			// номер соответствующего режима отключения
	unsigned int
		normaOnNmb,		// код нормы выхода на режим РРГ
		normaOffNmb,	// код нормы отключения РРГ
		ctVR,			// счетчик выхода на режим
		ctVRK;			// счетчик ответа на команду

	BPN_Point
    // массив диагностик объекта
		diagnNVR,		// нет выхода на режим РРГ
		diagnBOR,		// большая ошибка регулирования РРГ
		diagnNR,		// нет регулирования РРГ
		diagnNAU,		// нет ответа на задание уставки
		diagnSUM;		// суммарные диагностики режима
    // массив управляющих сигналов
	unsigned int
		parBPN,			// параметр БПН
        zadBPN,			// задание на канал
        tekBPN;			// текуще значение
		
	bool
        prBPN,          // признак положительного ответа
		vBPN;			// признак выхода на режим
};

	BPN_Point
	// дискреты пускателя
		BPN_OnOut,		// выходной дискретный сигнал включения пускателя
		BPN_OffOut,		// выходной дискретный сигнал отключения пускателя
		BPN_OnZin,		// входной дискретный сигнал пускателя
    // массив диагностик режима БПН
		diagnNA,		// нет связи
		diagnNON,		// нет включения пускателя
		diagnNOFF;		// нет отключения пускателя

	unsigned int
		BPN_normaOn,	// код нормы выхода на режима
		BPN_normaOff;	// код нормы отключения режима

	unsigned int
		CT_BPN = 0,		// (сек) счетчик пускателя
		T_VKL_BPN = 3,	// (сек) контрольное время вкл. пуск.
		BPN_tkVR = 3600,		// (сек) контр. время счетчика выхода на режим
		BPN_tkVRV = 5,		// (сек) контр. время нахождения в диапазоне при выходе
		BPN_tkVRK = 5;		// (сек) контр. время счетчика ответа на команду
		
	float
		BPN_porog1 = 0.1,			// порог появления диагностики "БОР" 10%
		BPN_porog2 = 0.5;			// порог появления диагностики "НР" 50%
		
const unsigned int
	qBPN = 24;	// количество каналов в установке
	SBPN *ObjBPN[qBPN];	// инициализация БПН

// функции управления объектом
void BPNOn(SBPN *object);
void BPNOff(SBPN *object);
void VBPN();    // включение силового пускателя БПН
void OBPN();    // отключение силового пускателя БПН
// функция управления счетчиками
void TimeBPN();

extern
	unsigned char
		// диагностики
		diagn[],
                // норма
		norma,
                // режимы
		shr[],
		// шаги режимов
		sh[],
                // вспомогательный подшаг
		sh_;

extern
	unsigned int
		// дискретные входы
		zin[],
		// дискретные выходы
		out[],
		// аналоговые входы
		aik[],
		// аналоговые выходы
		aout[];		

extern
	void A_OUT(unsigned int channelNmb, unsigned int value);
	void SetOut (bool value, unsigned char byteNmb, unsigned int mask);
