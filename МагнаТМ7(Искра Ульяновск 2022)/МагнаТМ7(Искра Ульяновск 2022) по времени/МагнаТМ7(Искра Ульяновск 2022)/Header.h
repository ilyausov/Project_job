//---------------------------------------------------------------------------
//--Файл описания глобальных переменных--//
//---------------------------------------------------------------------------

#define kodKlL 37
#define kodKlV 38
#define kodKlP 39
#define kodKlN 40

// предельные значения характеристик
float
    magnRes1,               // ресурс 1 магнетрона
    magnRes2,               // ресурс 2 магнетрона
    magnRes3,               // ресурс 3 магнетрона
    R_MAX = 20000.0,        // сопротивление максимальное
    R_MIN = 0.0,            // сопротивление минимальное
    R_MIN_USER = 20.0,      // сопротивление минимальное для пользователя
    I_MAX = 500.0,          // максимальное значение тока ИИ
    I_MAX_USER = 300.0,     // максимальное значение тока ИИ для оператора
    I_MIN = 0.0,            // минимальное значение тока ИИ
    BPM1_P_MAX = 3600.0,    // максимальное значение мощности БПМ1
    BPM1_P_MIN = 0.0,       // минимальное значение мощности БПМ1
    BPM1_P_USER_MAX = 2500.0,// максимальное значение мощности БПМ1 для задания
    BPM2_P_MAX = 3600.0,    // максимальное значение мощности БПМ2
    BPM3_P_MAX = 3000.0,    // максимальное значение мощности БПМ2
    COMET_MAX_PD = 600.0,    // максимальная падающая мощность CESAR ПД ВЧМ
    COMET_MIN_PD = 0.0,       // минимальный падающая мощность CESAR  ПД
    BPM2_P_MIN = 0.0,       // минимальное значение мощности БПМ2
    BPM2_P_USER_MAX = 2500.0,// максимальное значение мощности БПМ2 для задания
    BPM_P_V_MIN = 250.0,    // минимальное значение нарастания мощности БПМ при отпыле
    BPM_P_V_MAX = 500.0,    // максимальное значение нарастания мощности БПМ при отпыле
    BPM_U_USER_MIN = 100.0, // минимальное значение напряжения БПМ
    BPM_U_MAX = 650.0,      // максимальное значение напряжения БПМ
    CX600_MAX = 600.0,      // максимальное значение CX-600
    CX600_MIN = 0.0,        // минимальное значение CX-600
    DAVL_MAX = 13.332,      // максимальное значение давления
    DAVL_MIN = 0.0,         // минимальное значение давления
    TIME_MAX_NAGREV = 300.0,// максимальное значение времени процесса нагрева
    TIME_MAX = 3600.0,      // максимальное значение времени процесса
    TIME_MIN = 0.0,         // минимальное значение времени процесса
    UGOL_DZ_MAX = 360.0,    // максимальное значение угла поворота ДЗ
    UGOL_DZ_MAX_USER = 90.0,// максимальное значение угла поворота ДЗ для оператора
    UGOL_DZ_MIN = 0.0,      // минимальное значение угла поворота ДЗ
    US_MAX = 10.0,          // максимальное значение положения УС
    US_MAX_USER = 9.5,      // максимальное значение положения УС для оператора
    US_MIN_USER = 0.5,      // минимальное значение положения УС для оператора
    RRG1_MAX = 0.9,         // максимальный расход РРГ1
    RRG1_MIN = 0.0,         // минимальный расход РРГ1
    RRG2_MAX = 0.9,         // максимальный расход РРГ2
    RRG2_MIN = 0.0,         // минимальный расход РРГ2
    CESAR_MAX = 1000.0,     // максимальная падающая мощность CESAR
    CESAR_MIN = 0.0,        // минимальный падающая мощность CESAR
    SMESH_MAX = 1000.0,     // максимальное смещение
    SMESH_MIN = 0.0,        // минимальное смещение
    SMESH_MAX_USER = 600.0, // максимальное смещение для задания
    SMESH_MIN_USER = 20.0,  // минимальное смещение для задания
    TEMP_MAX = 250.0,       // максимальная температура
    TEMP_MIN = 20.0;        // минимальная температура

const
    unsigned char
        NASMOD_DAVL_COUNT = 4,
        NASMOD_DAVL_ST_COUNT = 4;
const
    unsigned int
        NASMOD_DAVL[NASMOD_DAVL_COUNT] = {3787, 3389, 2938, 2889},
        NASMOD_DAVL_ST[NASMOD_DAVL_ST_COUNT] = {3787, 3389, 2938, 2889},
        porogDavlVodi = 4095 * ( 1 * 0.4 + 1 ) / 10;

unsigned char flagSBres = 0;        // номер магнетрона для ввода ресурса
//------------------------------------------------------------------------------
    unsigned int
// переменная диспетчера встроенных устройств (плат ISO)
    externalTask = 0x00,
    externalError = 0;      // код ошибки при опросе внутренних устройств (плат ISO)

// всякие
    bool mnemoInAuto = 1;               // признак расположения мнемосхемы
    bool pr_otl = 0;                    // признак режама отладки
    unsigned int  logicPerSecond = 0;   // кол-во вызовов логики в секунду
    float logic_time = 0.0;             // время контура логики
    bool anim_fase = 0;                 // фаза анимации мнемосхемы
    char libNmb = -1;                   // номер выбранной библиотечной программы
    bool ust_ready = 0;
    bool pr_yel = 0;
// Инициализация прототипов динамически создаваемых элементов формата

        // создание надписей и кнопок Zin-ов
        TLabel    *Title_Zin[ZIN_COUNT][16];
        TImage    *Check_Zin[ZIN_COUNT][16];

        // создание надписей и кнопок Out
        TLabel    *Title_Out[OUT_COUNT][16];
        TImage *Check_Out[OUT_COUNT][16];

        // создание надписей и кнопок Aik
        TLabel  *Title_Ain[AIK_COUNT][8];
        TEdit   *Dec_Ain[AIK_COUNT][8];
        TEdit   *UV_Ain[AIK_COUNT][8];
        TCGauge *CG_Ain[AIK_COUNT][8];

        // создание надписей и кнопок Aout
        TLabel     *Title_Aout[AOUT_COUNT][4];
        TEdit      *Dec_Aout[AOUT_COUNT][4];
        TEdit      *UV_Aout[AOUT_COUNT][4];
        TCGauge    *CG_Aout[AOUT_COUNT][4];
        TEdit      *Dec_Aout_zad[AOUT_COUNT][4];
        TEdit      *UV_Aout_zad[AOUT_COUNT][4];
        TCGauge    *CG_Aout_zad[AOUT_COUNT][4];
        TButton    *Zero_Aout[AOUT_COUNT][4];
        TButton    *Ent_Aout[AOUT_COUNT][4];
        TScrollBar *Zad_Aout[AOUT_COUNT][4];

#define SERIES_COUNT 13 // начинаем с 1го а не с 0го
// массив отображения текущих графиков
TLineSeries
    *serTemp[SERIES_COUNT],
    *serArh[SERIES_COUNT];
//------------------------------------------------------------------------------
// Изменение названия газов
unsigned char GK_n = 0;         // номер канала изменяемого газа

char *loc_gas_udb="Nasmod\\mnames.udb"; // адрес файла сохранения


struct GAS_FILE	// структура массива
{
    char M_names[4][8];
};

GAS_FILE iniGAS;
//------------------------------------------------------------------------------
//------------------------------------------------------------------------------
// переменные для организации доступа

AnsiString pas_str,    // сформированная строка ввода
           Vpas_str,   // введенный пароль
           Vtekpas_str,   // введенный тек. пароль
           Vnew1pas_str,  // введенный новый 1 пароль
           Vnew2pas_str;  // введенный новый 2 пароль

char *loc_udb="Modules\\acc.udb"; // адрес файла сохранения пароля и настройки

struct IDINIFILE
{
 char pass[30];
 bool state[10];
};

IDINIFILE iniID;
//------------------------------------------------------------------------------
