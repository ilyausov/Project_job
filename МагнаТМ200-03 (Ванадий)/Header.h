// Инициализация прототипов динамически создаваемых элементов формата

        // создание надписей и кнопок Zin-ов
        TLabel    *Title_Zin[ZIN_COUNT][16];
        TImage *Check_Zin[ZIN_COUNT][16];

        // создание надписей и кнопок Out
        TLabel    *Title_Out[OUT_COUNT][16];
        TButton   *Btn_Out[OUT_COUNT][16];
        TImage *Check_Out[OUT_COUNT][16];

        // создание надписей и кнопок Aik
        TLabel  *Title_Ain[AIK_COUNT][8];
        TEdit   *Dec_Ain[AIK_COUNT][8];
        TEdit   *UV_Ain[AIK_COUNT][8];
        TCGauge *CG_Ain[AIK_COUNT][8];

        // создание надписей и кнопок Aout
        TLabel     *Title_Aout[AOUT_COUNT][4];
        TEdit      *Dec_Aout[AOUT_COUNT][4];
        TEdit      *UV_Aout[AOUT_COUNT][4];
        TCGauge    *CG_Aout[AOUT_COUNT][4];
        TEdit      *Dec_Aout_zad[AOUT_COUNT][4];
        TEdit      *UV_Aout_zad[AOUT_COUNT][4];
        TCGauge    *CG_Aout_zad[AOUT_COUNT][4];
        TButton    *Zero_Aout[AOUT_COUNT][4];
        TButton    *Ent_Aout[AOUT_COUNT][4];
        TScrollBar *Zad_Aout[AOUT_COUNT][4];

    // переменная диспетчера встроенных устройств (плат ISO)
unsigned int
    externalTask = 0x0000,  // 0x0001 - считать дискретные входные сигналы с ISO-P32C32
                            // 0x0002 - считать дискретные входные сигналы с ISO-ACL7225
                            // 0x0004 - записать дискретные выходные сигналы в ISO-P32C32
                            // 0x0008 - записать дискретные выходные сигналы в ISO-ACL7225
                            // 0x0010 - считать аналоговые входные сигналы с ISO-813
                            // 0x0020 - записать аналоговые выходные сигналы в ISO-DA16
                            // 0x0040 - считать аналоговые уставки с ISO-DA16
    externalError = 0;      // код ошибки при опросе внутренних устройств (плат ISO)

//------------------------------------------------------------------------------
const unsigned int
    porogDavlVodi = 4095 * ( 0.27 * 0.4 + 1 ) / 10; //порог 0.27атм(работать нельзя)

bool pr_otl = 0;                    // признак режама отладки

//int PR_KLASTER = 0; 

float
    magnRes1,               // ресурс 1 магнетрона позиции
    magnRes2,               // ресурс 2 магнетрона позиции 
    RRG1_MAX = 9.0,           // максимальный расход РРГ1
    RRG1_MIN = 0.0,           // минимальный расход РРГ1
    RRG2_MAX = 0.9,           // максимальный расход РРГ2
    RRG2_MIN = 0.0,           // минимальный расход РРГ2
    RRG3_MAX = 3.6,           // максимальный расход РРГ3
    RRG3_MIN = 0.0,           // минимальный расход РРГ3
    RRG4_MAX = 3.6,           // максимальный расход РРГ4
    RRG4_MIN = 0.0,           // минимальный расход РРГ4
    RRG5_MAX = 3.6,           // максимальный расход РРГ5
    RRG5_MIN = 0.0,           // минимальный расход РРГ5
    DAVL_MAX = 10.0,         // максимальное давление 13.33
    DAVL_MAX_USER = 10.0,
    DAVL_MIN = 0.1,           // минимальное давление
    CESAR_MAX_IP = 3000.0,    // максимальная падающая мощность CESAR ИП
    CESAR_MIN_IP = 0.0,       // минимальный падающая мощность CESAR  ИП
    US_MAX = 10.0,            // максимальное значение положения УС
    US_MAX_USER = 9.5,        // максимальное значение положения УС для оператора
    US_MIN_USER  = 0.5,       // минимальное значение положения УС для оператора
    CESAR_MAX_PD = 600.0,    // максимальная падающая мощность CESAR ПД
    CESAR_MIN_PD = 0.0,       // минимальный падающая мощность CESAR  ПД
    SMESH_MIN_USER = 0, 
    SMESH_MAX_USER = 4000.0,  // максимальное смещение для задания
    MEX_MIN = -2147483647,    // минимальный путь механики
    MEX_MAX = 2147483647,     // максимальный путь механики
    TIME_MAX = 30.0,        // максимальное время
    TIME_MIN = 0.0;           // минимальное время


// Изменение названия газов
unsigned char GK_n = 0;         // номер канала изменяемого газа
char *loc_udb="Data\\GasNames.udb"; // адрес файла сохранения пароля и настройки

struct IDUDBFILE
    {
        bool state[10];
        char Gas_names[10][8];
    };
unsigned char flagSBres = 0;        // номер магнетрона для ввода ресурса
IDUDBFILE GasNames;

//------------------------------------------------------------------------------
bool
    com1_err_alarm = 0,
    com2_err_alarm = 0,
    com3_err_alarm = 0,
    com4_err_alarm = 0,
        pr_yel = 0,
    firstSec = true,
    ust_ready = false,
    mnemoInAuto = true;
int
    zagolState = 0, // 0 - общие
                    // 1 - поз 1 и т.д.
    libNmb = -1;    // номер выбранной библиотечной программы

unsigned int  logicPerSecond = 0;
//------------------------------------------------------------------------------
float logic_time = 0.0;
bool anim_fase = 0; // фаза анимации мнемосхемы

#define SERIES_COUNT 8
// массив отображения текущих графиков
TLineSeries
    *serTemp[SERIES_COUNT],
    *serArh[SERIES_COUNT];

//------------------------------------------------------------------------------
// переменные для организации доступа

AnsiString pas_str,    // сформированная строка ввода
           Vpas_str,   // введенный пароль
           Vtekpas_str,   // введенный тек. пароль
           Vnew1pas_str,  // введенный новый 1 пароль
           Vnew2pas_str;  // введенный новый 2 пароль

char *loc_acc_udb="Data\\data2.udb"; // адрес файла сохранения пароля и настройки

struct PAS_FILE
{
 char pass[30];
 bool state[10];
};

PAS_FILE iniPAS;
//------------------------------------------------------------------------------
